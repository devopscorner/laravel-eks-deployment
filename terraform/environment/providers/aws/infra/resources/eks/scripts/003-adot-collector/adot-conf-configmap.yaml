apiVersion: v1
kind: ConfigMap
metadata:
  name: adot-conf
  namespace: amazon-metrics
  annotations:
    meta.helm.sh/release-name: adot-collector
    meta.helm.sh/release-namespace: observability
  selfLink: /api/v1/namespaces/amazon-metrics/configmaps/adot-conf
data:
  adot-config: |
    extensions:
      health_check:
      sigv4auth:
        service: "aps"
        region: "ap-southeast-1"

    receivers:
      awscontainerinsightreceiver:
        collection_interval:
        container_orchestrator:
        add_service_as_attribute:
        prefer_full_pod_name:
        add_full_pod_name_metric_label:

      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

      prometheus:
        config:
          global:
            scrape_interval: 15s
            scrape_timeout: 10s
          scrape_configs:

            - job_name: 'k8s_metrics_scrape'
              sample_limit: 10000
              metrics_path: /metrics
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  action: keep
                  regex: true
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  action: replace
                  regex: (.+)
                  target_label: __metrics_path__
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  action: replace
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  replacement: $$1:$$2
                  target_label: __address__
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - source_labels: [__meta_kubernetes_pod_node_name]
                  action: keep
                  regex: ${K8S_NODE_NAME}
                - source_labels: [__meta_kubernetes_namespace]
                  action: replace
                  target_label: K8S_NAMESPACE
                - source_labels: [__meta_kubernetes_pod_name]
                  action: replace
                  target_label: K8S_POD_NAME
                - source_labels: [__meta_kubernetes_pod_container_name]
                  action: replace
                  target_label: EKS_Container

    processors:
      batch/metrics:
        timeout: 60s
      memory_limiter:
        limit_mib: 100
        check_interval: 5s

    exporters:
      awsemf:
        namespace: ContainerInsights
        log_group_name: '/aws/containerinsights//performance'
        log_stream_name: InputNodeName
        region:
        resource_to_telemetry_conversion:
          enabled: true
        dimension_rollup_option: NoDimensionRollup
        parse_json_encoded_attr_values:
        - Sources
        - kubernetes
        metric_declarations:

          # node metrics
          - dimensions: [[NodeName, InstanceId, ClusterName]]
            metric_name_selectors:
              - node_cpu_utilization
              - node_memory_utilization
              - node_network_total_bytes
              - node_cpu_reserved_capacity
              - node_memory_reserved_capacity
              - node_number_of_running_pods
              - node_number_of_running_containers
          - dimensions: [[ClusterName]]
            metric_name_selectors:
              - node_cpu_utilization
              - node_memory_utilization
              - node_network_total_bytes
              - node_cpu_reserved_capacity
              - node_memory_reserved_capacity
              - node_number_of_running_pods
              - node_number_of_running_containers
              - node_cpu_usage_total
              - node_cpu_limit
              - node_memory_working_set
              - node_memory_limit
          # pod metrics
          - dimensions: [[PodName, Namespace, ClusterName], [Service, Namespace, ClusterName], [Namespace, ClusterName], [ClusterName]]
            metric_name_selectors:
              - pod_cpu_utilization
              - pod_memory_utilization
              - pod_network_rx_bytes
              - pod_network_tx_bytes
              - pod_cpu_utilization_over_pod_limit
              - pod_memory_utilization_over_pod_limit
          - dimensions: [[PodName, Namespace, ClusterName], [ClusterName]]
            metric_name_selectors:
              - pod_cpu_reserved_capacity
              - pod_memory_reserved_capacity
          - dimensions: [[PodName, Namespace, ClusterName]]
            metric_name_selectors:
              - pod_number_of_container_restarts
          # cluster metrics
          - dimensions: [[ClusterName]]
            metric_name_selectors:
              - cluster_node_count
              - cluster_failed_node_count
          # service metrics
          - dimensions: [[Service, Namespace, ClusterName], [ClusterName]]
            metric_name_selectors:
              - service_number_of_running_pods
          # node fs metrics
          - dimensions: [[NodeName, InstanceId, ClusterName], [ClusterName]]
            metric_name_selectors:
              - node_filesystem_utilization
          # namespace metrics
          - dimensions: [[Namespace, ClusterName], [ClusterName]]
            metric_name_selectors:
              - namespace_number_of_running_pods

      prometheusremotewrite:
        namespace: observability
        endpoint: "https://aps-workspaces.ap-southeast-1.amazonaws.com/workspaces/ws-xxx/api/v1/remote_write"
        resource_to_telemetry_conversion:
          enabled: true
        auth:
          authenticator: sigv4auth

      awsxray:
        region: ap-southeast-1

    service:
      pipelines:
        metrics:
          receivers:
          - prometheus
          - otlp
          processors:
          - batch/metrics
          exporters:
          - prometheusremotewrite
          - awsemf
          - prometheusremotewrite
        traces:
          processors:
          - memory_limiter
          receivers:
          - otlp
          exporters:
          - awsxray
      extensions:
      - health_check
      - sigv4auth
binaryData: {}
