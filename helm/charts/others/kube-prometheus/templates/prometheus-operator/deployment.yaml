{{- if .Values.operator.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "kube-prometheus.operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels: {{- include "kube-prometheus.operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "kube-prometheus.operator.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "kube-prometheus.operator.labels" . | nindent 8 }}
      {{- if .Values.operator.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.operator.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "kube-prometheus.operator.serviceAccountName" . }}
      {{- if .Values.operator.schedulerName }}
      schedulerName: {{ .Values.operator.schedulerName | quote }}
      {{- end }}
      {{- if .Values.operator.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.operator.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.operator.priorityClassName }}
      priorityClassName: {{ .Values.operator.priorityClassName }}
      {{- end }}
      {{- if .Values.operator.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.operator.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.operator.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.operator.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.operator.podAffinityPreset "component" "operator" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.operator.podAntiAffinityPreset "component" "operator" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.operator.nodeAffinityPreset.type "key" .Values.operator.nodeAffinityPreset.key "values" .Values.operator.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.operator.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.operator.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.operator.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.operator.tolerations "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: prometheus-operator
          image: {{ template "kube-prometheus.image" . }}
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          env:
            - name: PROMETHEUS_CONFIG_RELOADER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "kube-prometheus.operator.fullname" . }}
                  key: prometheus-config-reloader
          args:
            {{- if .Values.operator.kubeletService.enabled }}
            - --kubelet-service={{ .Values.operator.kubeletService.namespace }}/{{ template "kube-prometheus.fullname" . }}-kubelet
            {{- end }}
            {{- if .Values.operator.logFormat }}
            - --log-format={{ .Values.operator.logFormat }}
            {{- end }}
            {{- if .Values.operator.logLevel }}
            - --log-level={{ .Values.operator.logLevel }}
            {{- end }}
            - --localhost=127.0.0.1
            - --prometheus-config-reloader=$(PROMETHEUS_CONFIG_RELOADER)
            {{- if .Values.operator.configReloaderResources.requests }}
              {{- if .Values.operator.configReloaderResources.requests.cpu }}
            - --config-reloader-cpu-request={{ .Values.operator.configReloaderResources.requests.cpu }}
              {{- end }}
              {{- if .Values.operator.configReloaderResources.requests.memory }}
            - --config-reloader-memory-request={{ .Values.operator.configReloaderResources.requests.memory }}
              {{- end }}
            {{- end }}
            {{- if .Values.operator.configReloaderResources.limits }}
              {{- if .Values.operator.configReloaderResources.limits.cpu }}
            - --config-reloader-cpu-limit={{ .Values.operator.configReloaderResources.limits.cpu }}
              {{- end }}
              {{- if .Values.operator.configReloaderResources.limits.memory }}
            - --config-reloader-memory-limit={{ .Values.operator.configReloaderResources.limits.memory }}
              {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.operator.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.operator.livenessProbe.path }}
              port: http
              scheme: HTTP
            initialDelaySeconds: {{ .Values.operator.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.operator.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.operator.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.operator.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.operator.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.operator.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.operator.readinessProbe.path }}
              port: http
              scheme: HTTP
            initialDelaySeconds: {{ .Values.operator.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.operator.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.operator.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.operator.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.operator.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.operator.resources }}
          resources: {{- toYaml .Values.operator.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.operator.containerSecurityContext.enabled }}
          # yamllint disable rule:indentation
          securityContext: {{- omit .Values.operator.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          # yamllint enable rule:indentation
          {{- end }}
{{- end }}
