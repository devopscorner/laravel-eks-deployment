replicaCount: 1

secret:
  enabled: false

configMap:
  enabled: true
  name: "laravel-api"
  mountPath: /app/core/config
  readOnly: true
  data:
    .app.config.json : |-
      {
          "AppName": "Laravel Service",
          "GRPCTimeout": 10,
          "CacheExpiry": 300,
          "CacheCleanup": 600,
          "DefaultPageLimit": 3,
          "ClientTimeout": 10
      }
    .env : |-
      APP_NAME=Laravel
      APP_ENV=staging
      APP_KEY=
      APP_DEBUG=true
      APP_URL=laravel-dev.awscb.id

      LOG_CHANNEL=stack
      LOG_DEPRECATIONS_CHANNEL=null
      LOG_LEVEL=debug

      DB_CONNECTION=mysql
      DB_HOST=127.0.0.1
      DB_PORT=3306
      DB_DATABASE=laravel
      DB_USERNAME=root
      DB_PASSWORD=

      BROADCAST_DRIVER=log
      CACHE_DRIVER=file
      FILESYSTEM_DRIVER=local
      QUEUE_CONNECTION=sync
      SESSION_DRIVER=file
      SESSION_LIFETIME=120

      MEMCACHED_HOST=127.0.0.1

      REDIS_HOST=127.0.0.1
      REDIS_PASSWORD=null
      REDIS_PORT=6379

      MAIL_MAILER=smtp
      MAIL_HOST=mailhog
      MAIL_PORT=1025
      MAIL_USERNAME=null
      MAIL_PASSWORD=null
      MAIL_ENCRYPTION=null
      MAIL_FROM_ADDRESS=null
      MAIL_FROM_NAME="${APP_NAME}"

      AWS_ACCESS_KEY_ID=
      AWS_SECRET_ACCESS_KEY=
      AWS_DEFAULT_REGION=us-east-1
      AWS_BUCKET=
      AWS_USE_PATH_STYLE_ENDPOINT=false

      PUSHER_APP_ID=
      PUSHER_APP_KEY=
      PUSHER_APP_SECRET=
      PUSHER_APP_CLUSTER=mt1

      MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
      MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"


image:
  repository: devopscorner/laravel
  pullPolicy: Always  # IfNotPresent -or- Always
  tag: "latest"

imagePullSecrets: []
nameOverride: "laravel"
fullnameOverride: "laravel"

serviceAccount:
  create: true
  annotations: {}
  name: laravel
  namespace: devopscorner-dev

service:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP

containers:
  ports:
    - name: http
      containerPort: 80
      protocol: TCP

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/cors-allow-headers: '*'
    nginx.ingress.kubernetes.io/cors-allow-methods: '*'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    kubernetes.io/ingress.class: nginx
    ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/22
  hosts:
    - host: laravel-dev.awscb.id
      http:
        paths:
          - path: /
            pathType: Prefix   # Prefix -or - ImplementationSpecific
            backend:
              service:
                name: laravel-api
                port:
                  number: 80
  tls: []

application:
  enabled: true
  env:
    - name: HELM_TEMPLATE_NAME
      value: api
    - name: APP_NAME
      value: Laravel
    - name: APP_ENV
      value: staging
    - name: APP_KEY
      value: ''
    - name: APP_DEBUG
      value: 'true'
    - name: APP_URL
      value: laravel-dev.awscb.id
    - name: DB_CONNECTION
      value: 'mysql'
    - name: DB_HOST
      value: '127.0.0.1'
    - name: DB_PORT
      value: '3306'
    - name: DB_DATABASE
      value: 'laravel'
    - name: DB_USERNAME
      valueFrom:
        secretKeyRef:
          key: password
          name: laravel-secret
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: laravel-secret

resources:
  limits:
    cpu: 200m
    memory: 200Mi
  requests:
    cpu: 140m
    memory: 170Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector:
  enabled: true
  select:
    node: "laravel-dev"   # DEV NodeGroup
  # node: "laravel-uat"   # UAT NodeGroup

tolerations: []

affinity: {}

podAnnotations: {}

podSecurityContext: {}

securityContext: {}