replicaCount: 1

secret:
  enabled: false

configMap:
  enabled: true
  name: "mysql-api"
  mountPath: /app/core/config
  readOnly: true
  data:
    .app.config.json : |-
      {
          "AppName": "MySQL Service",
          "GRPCTimeout": 10,
          "CacheExpiry": 300,
          "CacheCleanup": 600,
          "DefaultPageLimit": 3,
          "ClientTimeout": 10
      }

image:
  registry: docker.io
  repository: bitnami/mariadb
  tag: 10.5.12-debian-10-r32
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: "mysql"
fullnameOverride: "mysql"

serviceAccount:
  create: true
  annotations: {}
  name: mysql
  namespace: devopscorner-dev

service:
  type: ClusterIP
  ports:
    - name: tcp
      port: 3306
      targetPort: 3306
      protocol: TCP

containers:
  ports:
    - name: tcp
      containerPort: 3306
      protocol: TCP

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: ""
      paths: []
  tls: []

application:
  enabled: true
  env:
    - name: DB_CONNECTION
      value: 'mysql'
    - name: DB_HOST
      value: '127.0.0.1'
    - name: DB_PORT
      value: '3306'
    - name: DB_DATABASE
      value: 'laravel'
    - name: DB_USERNAME
      valueFrom:
        secretKeyRef:
          key: password
          name: laravel-secret
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: laravel-secret

## Persist data to a persistent volume
persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "gp2"
  # persistentVolumeReclaimPolicy: Recycle
  # volumeMode: Filesystem
  accessMode: ReadWriteOnce
  ## Persistant Volume
  capacity: 20Gi
  ## Persistant Volume Claim
  size: 8Gi
  annotations: {}
  selector: {}

resources:
  limits:
    cpu: 200m
    memory: 200Mi
  requests:
    cpu: 140m
    memory: 170Mi


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector:
  enabled: true
  select:
    node: "laravel-dev"   # DEV NodeGroup
  # node: "laravel-uat"   # UAT NodeGroup

tolerations: []

affinity: {}

podAnnotations: {}

podSecurityContext: {}

securityContext: {}